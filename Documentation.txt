

//----------------------------  API Documentation   ----------------------------------------------------------------------

//postman :---------------------------------------------
GET /tasks:

curl -X GET http://localhost:3000/tasks
GET /tasks/:id:


curl -X GET http://localhost:3000/tasks/1
POST /tasks:

curl -X POST http://localhost:3000/tasks -H "Content-Type: application/json" -d '{"title": "New Task", "description": "Task Description"}'
PUT /tasks/:id:

curl -X PUT http://localhost:3000/tasks/1 -H "Content-Type: application/json" -d '{"title": "Updated Task", "description": "Updated Description"}'
DELETE /tasks/:id:

curl -X DELETE http://localhost:3000/tasks/1

// Add this at the end of index.js
app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).send('Something broke!');
});


//output:----------------------------------------------

GET /tasks: Retrieves a list of all tasks.
Response: 200 OK, [{"id":1,"title":"Task Title","description":"Task Description"}]
GET /tasks/:id: Retrieves a task by ID.
Response: 200 OK, {"id":1,"title":"Task Title","description":"Task Description"}, 404 Not Found if the task does not exist.
POST /tasks: Creates a new task.
Request: {"title": "New Task", "description": "Task Description"}
Response: 201 Created, {"id":2,"title":"New Task","description":"Task Description"}
PUT /tasks/:id: Updates an existing task by ID.
Request: {"title": "Updated Task", "description": "Updated Description"}
Response: 200 OK, {"id":1,"title":"Updated Task","description":"Updated Description"}, 404 Not Found if the task does not exist.

DELETE /tasks/:id: Deletes a task by ID.
Response: 204 No Content, 404 Not Found if the task does not exist.

